generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  firstName String?
  lastName  String?
  imageUrl  String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  tasks     Task[]
  roles     UserRole[]
  projectMappings ProjectUserMappings[]

  @@map("users")
}

model Project {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  tasks     Task[]
  userMappings ProjectUserMappings[]

  @@map("projects")
}

model ProjectUserMappings {
  id        Int      @id @default(autoincrement())
  
  projectId Int
  userId    Int

  project   Project @relation(fields: [projectId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("project_user_mappings")
  @@unique([projectId, userId]) // prevent duplicate mappings
}

model Task {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  status      String    @default("TODO") // TODO, IN_PROGRESS, DONE
  dueDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  userId    Int
  projectId Int

  user      User    @relation(fields: [userId], references: [id])
  project   Project @relation(fields: [projectId], references: [id])

  @@map("tasks")
}

model Role {
  id        Int        @id @default(autoincrement())
  role      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  users     UserRole[]

  @@map("roles")
}

model UserRole {
  id        Int      @id @default(autoincrement())

  userId    Int
  roleId    Int

  user      User     @relation(fields: [userId], references: [id])
  role      Role     @relation(fields: [roleId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, roleId]) // prevent duplicate assignments
  @@map("user_roles")
}
