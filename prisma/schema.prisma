generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  firstName String?
  lastName  String?
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tasks Task[]
  roles UserRole[]

  @@map("users")
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  tasks Task[]

  @@map("projects")
}

model Task {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  status      String    @default("TODO") // TODO, IN_PROGRESS, DONE
  dueDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  userId Int
  user   User @relation(fields: [userId], references: [id])

  projectId Int
  project   Project @relation(fields: [projectId], references: [id])

  @@map("tasks")
}

model Role {
  id        Int      @id @default(autoincrement())
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users UserRole[] // One role can be assigned to many users

  @@map("roles")
}

model UserRole {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, roleId]) // prevent duplicate role assignments
  @@map("user_roles")
}
